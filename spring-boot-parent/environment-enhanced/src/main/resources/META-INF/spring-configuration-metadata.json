{
	"groups": [
		{
			"name": "easyj.global.crypto",
			"description": "EasyJ定义的全局加密算法配置组."
		}
	],
	"properties": [
		{
			"name": "easyj.global.asymmetric-crypto.algorithm",
			"type": "java.lang.String",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的非对称加密算法."
		},
		{
			"name": "easyj.global.asymmetric-crypto.private-key",
			"type": "java.lang.String",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的非对称加密算法密钥."
		},
		{
			"name": "easyj.global.asymmetric-crypto.public-key",
			"type": "java.lang.String",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的非对称加密算法公钥."
		},
		{
			"name": "easyj.global.symmetric-crypto.algorithm",
			"type": "java.lang.String",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的对称加密算法."
		},
		{
			"name": "easyj.global.symmetric-crypto.key",
			"type": "java.lang.String",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的对称加密算法密钥."
		},
		{
			"name": "easyj.global.symmetric-crypto.iv",
			"type": "java.lang.String",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的对称加密算法偏移向量."
		},
		{
			"name": "easyj.global.symmetric-crypto.charset",
			"type": "java.nio.charset.Charset",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.EasyjAppointedEnvironmentPostProcessor",
			"description": "全局的对称加密算法编码."
		},
		{
			"name": "easyj.crypto.decrypt",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.CryptoPropertyUtils",
			"description": "函数式配置${xxx}：配置解密方法，例：${easyj.crypto.decrypt('xxxxxx这里是一个加密串')}."
		},
		{
			"name": "easyj.localIp.pattern",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.LocalIpPropertyUtils",
			"description": "函数式配置${xxx}：网卡IP匹配的方法，例：${easyj.localIp.pattern('10.10.10.*', '192.168.10.*')}."
		},
		{
			"name": "easyj.random",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：同${easyj.random.uuid32}，唯一用法：${easyj.random}."
		},
		{
			"name": "easyj.random.uuid32",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机生成32位UUID的方法，唯一用法：${easyj.random.uuid32}."
		},
		{
			"name": "easyj.random.uuid",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机生成完整UUID的方法，唯一用法：${easyj.random.uuid}."
		},
		{
			"name": "easyj.random.port",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机生成未被占用的端口号的方法，例：${easyj.random.port(2000, 3000)}."
		},
		{
			"name": "easyj.random.short",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机生成短整形数字的方法，例：${easyj.random.short(2000, 3000)}."
		},
		{
			"name": "easyj.random.int",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机生成整形数字的方法，例：${easyj.random.int(2000, 3000)}."
		},
		{
			"name": "easyj.random.long",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机生成长整形数字的方法，例：${easyj.random.long(2000L, 3000L)}."
		},
		{
			"name": "easyj.random.choose",
			"type": "java.lang.reflect.Method",
			"sourceType": "icu.easyj.spring.boot.env.enhanced.util.RandomPropertyUtils",
			"description": "函数式配置${xxx}：随机选取一个值的方法，例：${easyj.random.port('1', '2', '3', '4')}."
		}
	],
	"hints": [
		{
			"name": "easyj.global.crypto.algorithm",
			"values": [
				{
					"value": "RSA",
					"description": "非对称加密算法（提出者：Ron Rivest、Adi Shamir、Leonard Adleman）."
				},
				{
					"value": "RSA\/ECB\/PKCS1Padding",
					"description": "非对称加密算法."
				},
				{
					"value": "RSA\/ECB\/NoPadding",
					"description": "非对称加密算法."
				},
				{
					"value": "RSA\/None\/NoPadding",
					"description": "非对称加密算法."
				},
				{
					"value": "ECIES",
					"description": "非对称加密算法（集成加密方案，Elliptic Curve Integrate Encrypt Scheme）."
				},
				{
					"value": "AES\/CBC\/PKCS7Padding",
					"description": "对称加密算法."
				},
				{
					"value": "AES\/ECB\/PKCS5Padding",
					"description": "对称加密算法."
				},
				{
					"value": "DES\/ECB\/PKCS5Padding",
					"description": "对称加密算法."
				},
				{
					"value": "DESede\/CBC\/PKCS5Padding",
					"description": "对称加密算法."
				},
				{
					"value": "DESede\/ECB\/PKCS5Padding",
					"description": "对称加密算法."
				},
				{
					"value": "SM4\/ECB\/PKCS5Padding",
					"description": "对称加密算法."
				}
			],
			"providers": [
				{
					"name": "any"
				}
			]
		},
		{
			"name": "easyj.global.crypto.type",
			"values": [
				{
					"value": "Asymmetric",
					"description": "非对称加密算法."
				},
				{
					"value": "Symmetric",
					"description": "对称加密算法."
				}
			]
		}
	]
}